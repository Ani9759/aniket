import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score,mean_absolute_error,mean_squared_error
col=["mpg","cyclinder","displacement","horsepower","weight","acceleration","model year","origin","car name"]
df=pd.read_csv("C:/Users/anike/Downloads/Telegram Desktop/auto-mpg.data-original",delim_whitespace=True,header=None)
df.columns=col
df.drop("car name",axis=1,inplace=True)
df["mpg"]=df["mpg"].mean()
df["horsepower"]=df["horsepower"].mean()
ss=StandardScaler()
x=df[['cyclinder','horsepower','displacement','weight','acceleration','model year','origin']]
y=df['mpg']
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=.2,random_state=10)
ss.fit_transform(x_train,y_train)
model=LinearRegression()
model.fit(x_train,y_train)
mpg_predict=model.predict(x_test)
a=r2_score(y_test,mpg_predict)
b=mean_absolute_error(y_test,mpg_predict)
c=mean_squared_error(y_test,mpg_predict)
print(a)
print(b)
print(c)
